name: Go
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
    - name: Set up Go 1.18
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Build App
      run: make build

  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.github_token }}

  test:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    services:
      postgres:
        image: postgres:14.0
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: skeleton_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/skeleton_test?sslmode=disable
        run: |
          mkdir -p ./tools/bin
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.1/migrate.linux-amd64.tar.gz | tar xvz && mv migrate ./tools/bin/migrate
          ./tools/bin/migrate -path ./deploy/migrations -database $DATABASE_URL up
          make test-ci

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          fail_ci_if_error: true # optional (default = false)
          verbose: false # optional (default = false)